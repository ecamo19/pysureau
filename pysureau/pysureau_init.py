# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_pysureau_init.ipynb.

# %% auto 0
__all__ = ['pysureau_init']

# %% ../nbs/05_pysureau_init.ipynb 3
import os
import csv
import shortuuid
from typing import Dict, Union
from pathlib import PosixPath
from pathlib import Path
from pandera.typing import DataFrame
from .soil_utils import create_empty_soil_parameter_files
from .pysureau_utils import dict_to_csv

# %% ../nbs/05_pysureau_init.ipynb 4
def pysureau_init(
    path: Union[
        str, None
    ] = None,  # Path where the pysureau folders and files will be stored
):
    """
    Function for creating the project's main folder structure alongside with the necessary parameter files
    """

    # Type checking -------------------------------------------------------------
    # Only allow str or None
    if path is not None and not isinstance(path, str):
        raise TypeError(
            f'path must be a string or None, not {type(path).__name__}'
        )

    # Convert string to Path if provided ----------------------------------------
    if path is not None:
        path = Path(path)

    # Create folder structure ---------------------------------------------------

    # Get random number to name main folders
    random_uuid = shortuuid.uuid()

    if path is None:
        # Define path with random uuid at the home directory
        project_path = os.path.join(
            Path.home(), f'pysureau_project_{random_uuid}'
        )

        # Define paths to subderectories
        path_to_params_folder = os.path.join(project_path, '1_parameter_files')
        path_to_model_outputs_folder = os.path.join(
            project_path, '2_model_outputs'
        )
        path_to_logfiles_folder = os.path.join(project_path, '3_log_files')

        # Create main and subdirectories with it is corresponding files
        os.mkdir(project_path)
        os.mkdir(path_to_params_folder)

        # Create empty parameter files for soil
        create_empty_soil_parameter_files(path=path_to_params_folder)

        # Create empty parameter files for climate

        # Create empty parameter files for veg

        os.mkdir(path_to_model_outputs_folder)
        os.mkdir(path_to_logfiles_folder)

        print(f'pysureau project created at {project_path}')

    elif os.path.exists(path):
        # Define path with random uuid at the user's chosen path
        project_path = os.path.join(path, f'pysureau_project_{random_uuid}')

        # Define paths to subderectories
        path_to_params_folder = os.path.join(project_path, '1_parameter_files')
        path_to_model_outputs_folder = os.path.join(
            project_path, '2_model_outputs'
        )
        path_to_logfiles_folder = os.path.join(project_path, '3_log_files')

        # Create main and subdirectories with it is corresponding files
        os.mkdir(project_path)

        os.mkdir(path_to_params_folder)

        # Create empty parameter files for soil
        create_empty_soil_parameter_files(path=path_to_params_folder)

        # Create empty parameter files for climate

        # Create empty parameter files for veg

        os.mkdir(path_to_model_outputs_folder)
        os.mkdir(path_to_logfiles_folder)

        print(f'pysureau project created at {project_path}')

    else:
        raise FileNotFoundError(f'Path not found at: {path}')
