# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_pysureau_utils.ipynb.

# %% auto 0
__all__ = ['pysureau_init']

# %% ../nbs/00_pysureau_utils.ipynb 3
import os
from pathlib import Path
from typing import Union
import uuid

# %% ../nbs/00_pysureau_utils.ipynb 4
def pysureau_init(path: Union[str, None] = None # Path where the pysureau folders and files will be stored 
                  ):
    
    # Type checking -------------------------------------------------------------
    # Only allow str or None
    if path is not None and not isinstance(path, str):
        raise TypeError(f"path must be a string or None, not {type(path).__name__}")
    
    # Convert string to Path if provided ----------------------------------------
    if path is not None:
        path = Path(path)
    
    # Create folder structure ---------------------------------------------------
    
    # Get random number to name main folders
    random_uuid = uuid.uuid4()
    
    if path is None:

        # Get user's home directory
        local_home_dir = Path.home()
        
        # Create path with random uuid
        project_path = os.path.join(local_home_dir, f'pysureau_project_{random_uuid}')
	    
        # Create main
        os.mkdir(project_path)
        
        print(f'pysureau project created at {project_path}')
        
            
    elif os.path.exists(path):
    
        project_path = os.path.join(path, f'pysureau_project_{random_uuid}')
    
        os.mkdir(project_path)
    
        print(f'pysureau project created at {project_path}')
        
    else:
        raise FileNotFoundError(f"Path not found at: {path}")
    
    

# %% ../nbs/00_pysureau_utils.ipynb 7
# | export

