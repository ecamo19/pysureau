# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_pysureau_utils.ipynb.

# %% auto 0
__all__ = ['dict_to_csv']

# %% ../nbs/00_pysureau_utils.ipynb 3
import os
import csv
from typing import Dict
from pathlib import Path, PosixPath
from pandera.typing import DataFrame

# %% ../nbs/00_pysureau_utils.ipynb 4
def dict_to_csv(
    dictionary: Dict,  # Dictionary
    filename: str,  # Filename
    path: Path,  # Path where the csv file will be stored
) -> DataFrame:
    """
    Function for converting a dictionary that contains parameters into a CSV file
    """

    # Assert parameters ---------------------------------------------------------
    assert isinstance(dictionary, dict), (
        f'dictionay must by of class dict not {type(dictionary).__name__}'
    )

    assert isinstance(filename, str), (
        f'filename must by of class str not {type(filename).__name__}'
    )

    assert isinstance(path, str) | isinstance(path, PosixPath), (
        f'Input path must be a str, not a {type(path).__name__}'
    )

    # Convert string to Path if provided ----------------------------------------
    if os.path.exists(path):
        # Conver input path
        path = Path(path)

        filename = os.path.join(path, filename)

    else:
        raise FileNotFoundError(f'Path {path} not found')

    # Convert Dict into csv -----------------------------------------------------
    with open(filename, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)

        # Write header
        writer.writerow(['parameter_name', 'parameter_value'])

        # Write data rows
        for each_param_name, each_param_value in dictionary.items():
            writer.writerow([each_param_name, each_param_value])

    print(f'CSV parameter file saved at {filename}')
